#pragma checksum "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "59637b5de49829339e751597dd07701487b1c8d6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\_ViewImports.cshtml"
using WebApplication3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\_ViewImports.cshtml"
using WebApplication3.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"59637b5de49829339e751597dd07701487b1c8d6", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"463d1c12e8fc14b2589daa67feec3183fea97611", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Notice_board.Models.Notice>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<script type=\"text/javascript\">\r\n    $(document).ready(function () {\r\n        var dataSource = new kendo.data.DataSource({\r\n            type: \"json\",\r\n            transport: {\r\n                read: {\r\n                    url: \"");
#nullable restore
#line 15 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\Home\Index.cshtml"
                     Write(Url.Action("GetNotice", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    contentType: \"application/json\",\r\n                    dataType: \"json\",\r\n                    type: \"POST\"\r\n                },\r\n                update: {\r\n                    url: \"");
#nullable restore
#line 21 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\Home\Index.cshtml"
                     Write(Url.Action("UpdateOne", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    contentType: \"application/json\",\r\n                    dataType: \"json\",\r\n                    type: \"POST\"\r\n                },\r\n                create: {\r\n                    url: \"");
#nullable restore
#line 27 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\Home\Index.cshtml"
                     Write(Url.Action("CreateNew", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\",\r\n                    contentType: \"application/json\",\r\n                    dataType: \"json\",\r\n                    type: \"POST\"\r\n                },\r\n                destroy: {\r\n                    url: \"");
#nullable restore
#line 33 "C:\Users\xiangxupiao\source\repos\Notice_board\Notice_board\Views\Home\Index.cshtml"
                     Write(Url.Action("DeleteItem", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    contentType: ""application/json"",
                    dataType: ""json"",
                    type: ""POST""
                },
                parameterMap: function (options, operation) {
                    if (operation == ""read"") {
                        if (options.sort) {
                            if (options.sort.length == 0) {
                                options.sort = { field: 'Id', dir: 'asc' };
                            } else {
                                options.sort = { field: options.sort[0]['field'], dir: options.sort[0]['dir'] };
                            }
                        }
                    }
                    return kendo.stringify(options);
                }
            },
            pageSize: 10,
            serverPaging: true,
            serverSorting: true,
            serverFiltering: true,
            schema: {
                model: {
                    id: ""id"",
                    fields: {
                ");
            WriteLiteral(@"        id: { title: ""Id"", sortable: true, editable: false },
                        title: { title: ""Title"", sortable: false },
                        date: { title: ""Date"", sortable: false, editable: false },
                        content: { title: ""Content"", sortable: false },
                        writer: { title: ""Writer"", sortable: false }
                    }
                },
                data: ""noticelist"",
                total: ""total""
            },
        });
        $(""#noticetable"").kendoGrid({
            dataSource: dataSource,
            pageable: true,
            columns: [
                { field: ""id"", title: ""Id"", sortable: true},
                { field: ""title"", title: ""Title"", sortable: false },
                { field: ""date"", title: ""Date"", sortable: false},
                { field: ""content"", title: ""Content"", sortable: false},
                { field: ""writer"", title: ""Writer"", sortable: false },
                {command: [""edit"", ""destroy""], titl");
            WriteLiteral(@"e: ""Operations""}
            ],
            editable: ""popup"",
            sortable: true,
            filterable: true,
            toolbar: [""create""]
        });
        var grid = $(""#noticetable"").data(""kendoGrid"");
        grid.bind(""save"", bindDataAndRefresh);
    });
    function onGridEdit(e) {
        e.sender.one(""dataBound"", function (e) {
            e.sender.dataSource.read();
        });
    }
    function bindDataAndRefresh(e) {
        var grid = $(""#noticetable"").data(""kendoGrid"");
        grid.bind(""dataBound"", onGridEdit(e));
    }
</script>

<table id=""noticetable"">
</table>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Notice_board.Models.Notice>> Html { get; private set; }
    }
}
#pragma warning restore 1591
